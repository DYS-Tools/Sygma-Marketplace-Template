security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    #role_hierarchy: [ROLE_ADMIN,ROLE_AUTHOR,ROLE_USER]
    role_hierarchy:
        ROLE_ADMIN:  [ROLE_ADMIN,ROLE_AUTHOR,ROLE_USER]
        ROLE_AUTHOR: [ROLE_AUTHOR,ROLE_USER]
        ROLE_USER:   [ROLE_USER]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            remember_me:
                secret:   '%kernel.secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        # - { path: ^/author, roles: ROLE_AUTHOR }
        - { path: ^/dashboard/MyOrder, roles: ROLE_USER}  #Order User
        - { path: ^/dashboard, roles: ROLE_ADMIN}
        - { path: ^/product/new, roles: [ ROLE_ADMIN ] } #CRUD product
